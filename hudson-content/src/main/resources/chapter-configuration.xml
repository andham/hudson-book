<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.discursive.com/docbook/xml/4.5/docbookx.dtd">
<chapter id="chapter-configuration">
  <title>Hudson Configuration</title>

  <para>To configure Hudson, click on the Manage Hudson link in the left-hand
  navigation menu, which will display the screen shown in <xref
  linkend="fig-using-manage-hudson" />. This chapter will focus on the
  <indexterm>
      <primary>Configure System</primary>
    </indexterm><option>Configure System</option>
      section.</para>

  <figure id="fig-using-manage-hudson">
    <title>Managing Hudson</title>

    <!-- TODO HBOOK-81  need new screenshot with Maven 3 configuration added if
      that is how it will be or otherwise update related documentation
    -->
    configuration on<mediaobject>
      <imageobject role="web">
        <imagedata contentdepth="100%"
                   fileref="figs/web/manage-hudson.png" scalefit="1" />
      </imageobject>

      <imageobject role="print">
        <imagedata align="center"
                   fileref="figs/print/manage-hudson.pdf"
                   scalefit="0" width="100%" />
      </imageobject>
    </mediaobject>
  </figure>

  <para>Depending on the plugins installed and activated on your Hudson system,
  different sections will be available in the system configuration section.
  These will either be explained below or with a plugin specific section. For
  example the source code management related global configurations for the
  different SCM systems is available in <xref
      linkend="chapter-source-control"/>.</para>
  <section id="section-global-hudson-configuration">
    <title>Global Hudson Configuration</title>

    <para>The first section in the
      <option>Configure System</option>
      screen contains options that allow you to configure global Hudson
      configuration attributes. This section is shown in
      <xref linkend="fig-using-global-config"/>.
    </para>

    <figure id="fig-using-global-config">
      <title>Configuring Global Hudson Configuration</title>

      <mediaobject>
        <imageobject role="web">
          <imagedata contentdepth="100%"
                     fileref="figs/web/global-hudson-configuration.png"
                     scalefit="1" />
        </imageobject>

        <imageobject role="print">
          <imagedata align="center"
                     fileref="figs/print/global-hudson-configuration.pdf"
                     scalefit="0" width="100%" />
        </imageobject>
      </mediaobject>
    </figure>

    <variablelist>
      <varlistentry>
        <term>Home Directory</term>

        <listitem>
          <para>This parameter displays the absolute installation path of the
            currently running Hudson system. It is not a runtime configurable
            parameter. It is set by the server on startup. By default it will be
            the value of the HUDSON_HOME environment variable or the
            <varname>.hudson</varname>
            folder in the home directory of the operating system user running
            Hudson. The value is displayed here to allow the administrator to
            verify the correct setting.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>System Message</term>

        <listitem>
          <para>This message is displayed by Hudson in
          the main screen above the list of projects. It can be used as a
          welcome message or to e.g. broadcast upcoming maintenance to users
          of the Hudson instance via the user interface. It supports plain text
          as well a HTML snippets for formatting and enriching the
          message with dynamic content.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term># of Executors</term>

        <listitem>
          <para>This parameter controls the number of concurrent builds
            Hudson is configured to run. Optimal values in terms of performance
            will depend on the number of CPU's, IO performance and other hardware
            characteristics of the server running Hudson as well as the type
            of builds configured to run. A good starting point for
            experimentation is the number of CPUs.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Quiet period</term>

        <listitem>
          <para>A
            <option>Quiet Period</option>
            as specified in this configuration causes Hudson to wait the
            specified number of seconds before a triggered build is started. If
            your Hudson project is constantly "flapping" (switching between
            failure and success frequently), you may want to set the Quiet
            period to achieve more build stability. Another scenario this can be
            helpful is when large commits to your source control system are
            typically carried out in multiple smaller commits within a short
            time frame, so that the committer has a chance to get everything in
            without a build kicking off straight after the first commit causing
            a build failure. Setting this number to a large amount can generally
            reduce the number of builds running for this project, which will
            reduce the overall load for your Hudson server.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
      <term>SCM checkout retry count</term>

        <listitem>
          <para>The
            <option>SCM checkout retry count</option>
            determines the number of attempts Hudson makes to check out any
            updates when polling the SCM system for changes and finds the system
            to be unavailable.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Enable Security</term>

        <listitem>
          <para>The
            <option>Enable Security</option>
            checkbox switches on the security system that will require username
            and password for any access to run builds or change configurations
            of Hudson and build projects. A large number of configuration
            options and security providers can be used and more information can
            be found in
            <xref linkend="chapter-security"/>
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Prevent Cross Site Request Forgery exploits</term>

        <listitem>
          <para>This feature will enable improved security against Cross Site
          Request Forgery exploits and is recommended to be turned on when
          your Hudson instance is available to the public internet. On the
          other hand it can be necessary to have this feature disabled, when
          your Hudson web interface is embedded in a dashboard type interface
          that also contains web content from other domains or even only
          internal server names or sub networks. In general it will not be
          necessary to enable this feature on an internal network, where only
          trusted parties have access to Hudson.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Help make Hudson better...</term>

        <listitem>
          <para>By selecting this feature to be enabled you agree for anonymous
            usage statistics about your Hudson installation to be created and
            securely sent to the Hudson development team and made available to
            the user community. The data sent consists of
            <itemizedlist>
              <listitem>
              <para>the Hudson version you are using</para>
              </listitem>

              <listitem>
                <para>operating system, JVM and number of executors for your
                  master Hudson and any slaves being used
                </para>
              </listitem>

              <listitem>
                <para>the name and version of all activated plugins</para>
              </listitem>

              <listitem>
                <para>the number of each project type configured to run</para>
              </listitem>

              <listitem>
                <para>HTTP information as provided by your Hudson
                instance</para>
              </listitem>
            </itemizedlist></para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section>
    <title>Global Properties Configuration</title>

    <para>The global properties configuration allows the definition of
    key-value pairs that are exposed to all running builds as environment
    variables. Depending on the build system used they can be picked up with
    different syntax e.g. $key or ${key}</para>

    <!-- SEE HBOOK-41-->
  </section>

  <section id="section-configure-jdk">
    <title>Configuring JDK Installations</title>

    <para>Hudson can support one or more JDK installations used for running your
      builds. Setting up multiple JDK installs allows the configuration of
      different projects being built by different Java versions in separate
      jobs. You can use this to ensure e.g. that builds as well as test suites
      run fine on an older Java version to ensure compatibility. Another
      application would be to run with JDK versions supplied by different
      vendors.
    </para>

    <para>The most common configuration of a JDK is to point to the already
      installed instance as used for running Hudson itself. This can be achieved
      simply by supplying a name like
      <varname>Open JDK 6</varname>
      in the
      <option>Name</option>
      input field and the absolute path in the
      <option>JAVA_HOME</option>
      input field in the screen as shown in
      <xref linkend="fig-using-jdk-config"/>.
    </para>

    <figure id="fig-using-jdk-config">
      <title>Configuring JDK Installations</title>
      <!-- HBOOK-56 -->
      <mediaobject>
        <imageobject role="web">
          <imagedata contentdepth="100%"
                     fileref="figs/web/configure-jdk.png" scalefit="1" />
        </imageobject>

        <imageobject role="print">
          <imagedata align="center"
                     fileref="figs/print/configure-jdk.pdf" scalefit="0"
                     width="100%" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>Furthermore it is possible to configure a JDK to be installed
      automatically by specifying a name as before and then selecting the
      <option>Install Automatically</option>
      check box. This exposes a drop down labelled
      <option>Add installer</option>
      which lets you choose from the options
      <option>Install from Oracle</option>,
      <option>Extract *.zip/*.tar.gz</option>
      and<option>Run Command</option> as visible in <xref
        linkend="fig-using-jdk-config"/>.</para>

    <para>All the automatic install configurations cause Hudson to wait for the
      first build, which is configured to use a named instance of the JDK to
      initiate the JDK installation.
    </para>

    <para>The option
      <option>Install from Oracle</option>
      brings up a drop down to choose the version as well as a checkbox that
      needs to be clicked to the JavaSE license agreement.
    </para>

    <para>If you select to use
      <option>Extract *.zip/*.tar.gz</option>
      as shown in
      <xref linkend="fig-extract-archive-installer"/>
      you will be able to configure a
      <option>Label</option>, the
      <option>Download URL for binary archive</option>
      and the
      <option>Subdirectory of extracted archive</option>.
    </para>


    <figure id="fig-extract-archive-installer">
      <title>Extract *zip/*.tar.gz archive Installer Configuration</title>

      <mediaobject>
        <imageobject role="web">
          <imagedata contentdepth="100%"
                     fileref="figs/web/extract-archive-installer.png"
                     scalefit="1"/>
        </imageobject>

        <imageobject role="print">
          <imagedata align="center"
                     fileref="figs/print/extract-archive-installer.pdf"
                     scalefit="0" width="100%"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      If you specify a label, only Hudson nodes with the same label will use
      this installer. By using different labels it is possible for example to
      get the same tool installed on different nodes with different operating
      systems from different automatic install setups. The download url
      specifies the full url from which the JDK will be downloaded. The actual
      download is run off the Hudson master, so that any Hudson nodes that need
      the JDK installed do not need to have access to the url location. After
      successful download the JDK will be installed in the specified sub
      directory of the Hudson install directory.
    </para>

    <figure id="fig-run-command-installer">
      <title>Run Command Installer Configuration</title>
      <mediaobject>
        <imageobject role="web">
          <imagedata contentdepth="100%"
                     fileref="figs/web/run-command-installer.png"/>
        </imageobject>
        <imageobject role="print">
          <imagedata align="center"
                     fileref="figs/print/run-command-installer.pdf" scalefit="0"
                     width="100%"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>The last automatic installation option is the
      <option>Run a command</option>
      option displayed in<xref linkend="fig-run-command-installer"/>. The
      <option>Label</option>
      options works the same as for the archive extraction based install. The
      <option>Command</option>
      input allows you to specify the shell command to execute on the node for
      the install. Typically this is some package management invocation. The
      resulting tool directory has to be specified in the
      <option>Tool Home</option>
      input box.
    </para>

    <para>Once more than one JDK is configured in the global settings, each
      project configuration has an additional drop down, which allows the
      selection of the JDK to be usd to build the project and is visible in
      <xref linkend="fig-extract-archive-installer"/>
    </para>
  </section>

  <section id="section-configure-ant">
    <title>Configuring Ant Installations</title>
    <para>In a similar fashion to the JDK install Apache Ant can be installed in
      multiple versions to be available for your Hudson configured builds. The
      default configuration is to supply a name like
      <varname>Apache Ant 1 .8.2</varname>
      for the Ant installation and a value in the
      <option>ANT_HOME</option>
      input that is defined by the absolute path to the folder containing your
      pre-existing local Apache Ant install e.g.
      <varname>/opt/apache-ant-1.8.2</varname>
    </para>

    <para>Using a preinstalled Ant requires manual install or the use of your
      operating system package management system, a provisioning system or as
      part of a virtual machine image management. To avoid this need Hudson can
      install a required Apache Ant version automatically when needed.
    </para>

    <para>The simplest way achieve this is to select the
      <option>Install automatically</option>
      checkbox and select
      <option>Install from Apache</option>
      and choose the desired version from the drop down.
    </para>

    <para>Similar to the JDK installation from Oracle it is possible to use
      <option>Install from Apache</option>
      to get Ant installed. The options to install from an archive or by
      running a command are available as well and work in the same way as for
      JDK installs. A use case for an install from a file would be a custom
      Ant distribution with libraries for in-house tasks and maybe Ant
      contrib included as documented in detail in
      <xref linkend="chapter-ant"/></para>
  </section>

  <section id="section-configure-maven">
    <title>Configuring Maven Installations</title>

    <para>One of the main uses cases for Hudson is building projects with
      Apache Maven. The first step to using Maven is to configure one or more
      Maven installations. Like the JDK and Ant installation options,
      Maven can be configured in multiple ways: </para>
      <variablelist>
        <varlistentry>
          <term>Use an existing installation</term>
          <listitem>
            <para>Specify a <option>Name</option> and add the path to your
              Maven install in the <option>MAVEN_HOME</option> input control.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Automatically install from Apache</term>
          <listitem>
            <para>Select the <option>Install automatically</option> checkbox
              and <option>Install from Apache</option> in the drop down and
              choose the Maven version, you wish to install.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Automatically install from an archive file</term>
          <listitem>
            <para>Select the <option>Install automatically</option> checkbox
              and <option>Extract *zip/*.tar.gz</option> and configure the
              installation as documented in <xref linkend="section-configure-jdk"/>
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Automatically install via a command</term>
          <listitem>
            <para>Select the <option>Install automatically</option> checkbox
              and <option>Run Command</option> and configure the installation
              as documented in <xref linkend="section-configure-jdk"/>.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
     <figure id="fig-configure-maven-installation">
      <title>Configuring Maven Installations</title>
      <mediaobject>
        <imageobject role="web">
          <imagedata contentdepth="100%"
                     fileref="figs/web/configure-maven.png" scalefit="1" />
        </imageobject>

        <imageobject role="print">
          <imagedata align="center"
                     fileref="figs/print/configure-maven.pdf"
                     scalefit="0" width="100%" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>We recommend that you run your build using the latest Maven 3.0
      release. With multiple Maven installations configured a dropdown in the
      project task configuration will allow you to choose the desired Maven
      version as visible in<xref linkend="fig-configure-maven-installation"/>.
      <xref linkend="chapter-maven"/>
      provides an in-depth documentation using Maven with Hudson.
    </para>
  </section>

  <section id="section-configure-maven-3-builder-defaults">
    <title>Maven 3 Builder Defaults</title>
    <para>The Maven 3 integration allows for a set of default values to be
      defined that are used when a new build step for invoking Maven 3 is added
      to a project configuration. These values are defined in the section
      <option>Maven 3 Builder Defaults</option>
      in the global Hudson configuration here. The individual fields and their
      purpose and usage are documented in
      <xref linkend="section-maven-3-build-configuration"/>.
    </para>
  </section>

  <section id="section-configure-shell">
    <title>Configuring the Shell Executable</title>
    <para>Hudson allows for the ability to configure shell builds. If you
      have a
      build that requires the execution of shell scripts Hudson will by default
      execute<varname>/bin/sh</varname>. For more complex builds scripts running
      on different *nix environments, this can cause problems.
      <varname>/bin/sh</varname>
      often symlinks to a concrete shell like bash, ash, zsh or ksh. This setup
      of a specific shell will change from operating system to operating system
      as well as from user to user. If your scripts depend on a specific shell
      you should therefore specify your default shell in this input to e.g.
      <varname>/bin/bash</varname>. In a similar way you can add the path to
      a cygwin install of e.g. bash on your Windows server to run unix
      scripts as part of your build.
    </para>

    <figure id="fig-using-shell-execute">
      <title>Configuring Shell Executable</title>

      <mediaobject>
        <imageobject role="web">
          <imagedata contentdepth="100%"
                     fileref="figs/web/ci-using-shell-execute.png"
                     scalefit="1" />
        </imageobject>

        <imageobject role="print">
          <imagedata align="center"
                     fileref="figs/print/ci-using-shell-execute.pdf"
                     scalefit="0" width="100%" />
        </imageobject>
      </mediaobject>
    </figure>
  </section>

  <section id="section-configure-email-notification">
    <title>Configuring E-mail Notification</title>

    <!-- SEE HBOOK-45-->
    <para>Notification of build results and email based notification
      specifically is a core feature of a continuous integration server. This
      configuration section as displayed in
      <xref linkend="fig-configure-email-notification"/>
      allows you to configure the SMTP related settings to connect to the server
      and send the emails.
    </para>

    <tip>In general it can be advantageous to configure all email recipients in
      Hudson as mailing list addresses. Combined with a mailing list management
      system available to your potential recipients e.g. development and QA team
      members, this setup allows users to join any mailing list and therefore
      notifications for specific jobs without any configuration changes on
      Hudson.
    </tip>

    <figure id="fig-configure-email-notification">
      <title>Configuring Email Notification</title>

      <mediaobject>
        <imageobject role="web">
          <imagedata contentdepth="100%"
                     fileref="figs/web/configure-email-notification.png"
                     scalefit="1" />
        </imageobject>

        <imageobject role="print">
          <imagedata align="center"
                     fileref="figs/print/configure-email-notification.pdf"
                     scalefit="0" width="100%" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>The following options can be configured:</para>

    <variablelist>
       <varlistentry>
         <term>SMTP Server</term>

         <listitem>
           <para>The
             <option>SMTP server</option>
             configuration is typically the IP number of the mail server or a
             fully qualified name including the domain e.g.
             <varname>smtp.example.com</varname>
             . If the mail server is reachable by host name or some alias e.g.
             <varname>hermes</varname> from the Hudson server you can use it as
             the SMTP server configuration.
           </para>
         </listitem>
       </varlistentry>

      <varlistentry>
        <term>Default user e-mail suffix</term>

        <listitem>
          <para>This suffix is appended to the Hudson user names used to login
            to Hudson and the result can be used for e-mail notification. E.g.
            if the Hudson instance runs for
            <varname>example.com</varname>
            you could supply the suffix of <varname>@example.com</varname>. A
            Hudson user with username
            <varname>jane.doe</varname> would then receive email
            notifications at the email<varname>jane.doe@example.com</varname>.
            This can be especially useful with security setups using an identity
            management system like LDAP for Hudson access as well as email
            address setup as documented in <xref linkend="chapter-security"/>.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>System Admin E-Mail Address</term>
       <listitem>
          <para>This is the email address used as the email sender in any
            E-mail notification sent by the server. When configuring this
            email you should either ensure that emails sent back as a reply
            are monitored by somebody or bounced by the server with some
            meaningful error message.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Hudson URL</term>

        <listitem>
          <para>The <option>Hudson URL</option> value will be used in the
            email notifications sent out to provide links to build results
            and so on. Provide a URL that will be valid for the audience of
            your notifications. If all recipients will be on an intranet or
            VPN you can use a non-public URL or IP number.
          </para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>In addition to basic SMTP configuration parameters,
      you can click the <option>Advanced Options</option> button for further
      configuration that allow you to send email via servers that require
      authentication. Most SMTP servers will require at least user name and
      password to be accessed.</para>
    <variablelist>

      <varlistentry>
        <term>Use SMTP Authentication</term>

        <listitem>
          <para>Clicking on the checkbox will reveal
            <option>User Name</option>
            and
            <option>Password</option>
            input fields. Depending on the server configuration your user name
            will be just the login name or the full email address or either.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Use SSL</term>

        <listitem>
          <para>Select this checkbox if your SMTP server supports connecting
            with SSL activated.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>SMTP Port</term>

        <listitem>
          <para>This configuration allows you to specify a custom port for
            the communication with mail server. If the field is left empty the
            default ports are used. These are 25 for SMTP and 465 for SSL
            secured SMTP. It is a common practice to configure a different
            port, so be sure to check with the administrator of the mail
            server what port you should be using.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Charset</term>

        <listitem>
          <para>The <option>Charset</option> configuration determines the
            character set used for the composed e-mail message.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Test configuration</term>

        <listitem>
          <para>Pressing this button will execute the current configuration
            for sending emails. Depending on your configuration and network
            setup you should receive an email after a short while.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>

    <section id="section-configure-email-gmail">
      <title>E-mail Notification Via Gmail</title>
      <!-- HBOOK-60 -->
      <para>In order to use GMail to send your emails you will need to
        configure the <option>SMTP server</option> to <varname>smtp.gmail
          .com</varname>. In addition you will have to have a Gmail account
        and provide the GMail e-mail address, or any other email address
        configured to be accepted in your Gmail account, as the <option>User
        Name</option> and configure the <option>Password</option>.

<!--        Does it support SSL? What port? See http://184.73.106.215:8080/ -->
      </para>
    </section>

    <section id="section-configure-email-exchange">
      <title>E-mail Notification Via Exchange Server</title>
      <!-- HBOOK-58 -->
      <!-- <para>need to explain how to setup different advanced config related
      to
        SSL and others by using javamail parameters in system properties as
        linked in the built in help, </para> -->
    </section>

    <section id="section-configure-email-advanced">
      <title>Advanced configuration with JavaMail system properties</title>
      <!-- HBOOK-57 -->
    </section>
    <section>
      <title>Troubleshooting E-mail Notification</title>
      <para>not sure what to put here..
      </para>
      <variablelist>
        <varlistentry>
          <term>Spam filter related problems</term>
          <listitem>
            <para>One of the common problems for build server notification
              emails not being received are spam filter setting on the server
              and/or client side of the recipient. Most spam filter systems will
              allow you to access a list of filtered message and configure a
              white list of senders. Adding the <option>System Admin
              E-mail Address</option> to the white list will ensure that your
            build notifications reach you.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </section>

  <section>
    <!-- HBOOK-59 -->
    <title>Configuring SCM Polling Concurrency</title>

    <para>This is a simple, global parameter to Hudson which controls the
    number of concurrent threads to be used when polling an SCM system. Most
    CI systems discover code changes in an SCM by continuously polling source
    control. If you have enough project configured, this polling can grow to
    become a significant factor in SCM performance. If you are suffering
    performance issues because you have configured hundreds of projects to
    poll SCM, you can use this one property to define concurrency limits on
    Hudson's ability to concurrently poll an SCM.</para>

    <figure id="fig-using-scm-poll">
      <title>Configuring SCM Polling Concurrency</title>

      <mediaobject>
        <imageobject role="web">
          <imagedata contentdepth="100%"
                     fileref="figs/web/ci-using-scm-poll.png" scalefit="1" />
        </imageobject>

        <imageobject role="print">
          <imagedata align="center" fileref="figs/print/ci-using-scm-poll.pdf"
                     scalefit="0" width="100%" />
        </imageobject>
      </mediaobject>
    </figure>
  </section>


  <section id="section-configure-maven-3-configuration">
     <title>Managing Maven 3 Configuration</title>

     <para>The Maven 3 integration of Hudson provides you with the ability to
     manage custom Maven configuration files directly through the Hudson user
     interface. You can manage:</para>

     <itemizedlist>
       <listitem>
         <para>Maven Settings Configuration</para>
       </listitem>

       <listitem>
         <para>Maven Toolchains Configuration</para>
       </listitem>
     </itemizedlist>

    <section>
      <title>Opening the Maven 3 Configuration Page</title>

      <para>To open the Maven 3 Configuration page, click on
        <option>Manage Server</option>
        in the left-hand Hudson menu, and then select the
        <option>Maven 3 Configuration</option>
        item shown in<xref linkend="fig-using-manage-hudson"/>.
      </para>

      <para>Once you select the Maven 3 Configuration option, you will see the
        page shown in<xref linkend="fig-manage-mvn-3-configurations"/>. If you
        have already configured Maven Settings or Maven Toolchains configuration
        documents they will appear in the list of documents shown on this page.
        If you have not configured any Maven configuration documents, you will
        see the empty configuration screen shown in<xref
            linkend="fig-manage-mvn-3-configurations"/>.
      </para>

      <figure id="fig-manage-mvn-3-configurations">
        <title>The Maven 3 Configuration Page</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/manage-mvn-3-configurations.png"
                       scalefit="1"/>
          </imageobject>
          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/manage-mvn-3-configurations.pdf"
                       scalefit="0" width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>To create a new Maven 3 Configuration document, click on the
        <option>Add</option>
        button. This will create a new configuration document and display a form
        that will allow you to name the document, describe the document, select
        a document type, and supply configuration content for a configuration
        document.
      </para>

      <para>To remove an existing document, select the document from the list of
        documents shown and click on the
        <option>Remove</option>
        button. This will load a confirmation dialog. If the action is
        confirmed, the document will be permanently removed from your Hudson
        instance.
      </para>

      <para>Click the Refresh button in the interface to reload the Hudson
        configuration and display any configuration documents which may have
        been altered since you first loaded this page.
      </para>
    </section>

    <section>
      <title>Managing Maven 3 Settings Configuration</title>

      <para>To create a new Maven 3 Setting configuration file which can be
        referenced by a Hudson Maven 3 build step, click on the
        <option>Add</option>
        button as shown in<xref linkend="fig-manage-mvn-3-configurations"/>.
        Clicking on Add will display a form containing the ID, Type, Name,
        Description, and Attribute fields as shown in<xref
            linkend="fig-manage-mvn-3-settings"/>. Select
        <option>SETTINGS</option>
        for the Type field.
      </para>

      <figure id="fig-manage-mvn-3-settings">
        <title>Managing Maven 3 Settings in Hudson</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/manage-mvn-3-config-settings.png"
                       scalefit="1"/>
          </imageobject>
          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/manage-mvn-3-config-settings.pdf"
                       scalefit="0" width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>The sample Maven 3 Settings configuration shown in
        <xref linkend="fig-manage-mvn-3-settings"/>
        define a General Maven 3 Settings file which configures all Maven 3
        builds to read artifacts from a corporate Nexus repository. This sample
        XML was copied from
        <ulink
            url="http://www.sonatype.com/books/nexus-book/reference/maven-sect-single-group.html">
          the Maven 3 Settings example
        </ulink>
        in the Sonatype Nexus book and customized to reference a hypothetical
        server running on
        <varname>nexus.sonatype.org:8081</varname>.
      </para>

      <para>Usage of the Maven 3 Settings configuration file in a Hudson job is
        documented in <xref linkend="section-maven-3-build-configuration"/>.
      </para>


      <!-- TODO add more stuff about tool chains and link to
      http://maven.apache.org/guides/mini/guide-using-toolchains.html
      potentially
      -->
    </section>
  </section>

</chapter>
