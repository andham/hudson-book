<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.sonatype.com/tmp/docbook/xml/4.5/docbookx.dtd">
<book id="book-nexus">
  <?dbhtml filename="index.html"?>

  <title>${book.title}</title>

  <bookinfo>
    <!--<isbn>9780984243303</isbn>-->

    <edition>${project.version}</edition>

    <author>
      <surname>Oracle, Inc.</surname>
    </author>

    <author>
      <surname>Sonatype, Inc.</surname>
    </author>

    <author>
      <surname>Moser</surname>

      <firstname>Manfred</firstname>
    </author>

    <author>
      <surname>Yeary</surname>

      <firstname>John</firstname>
    </author>

    <author>
      <surname>Prakash</surname>

      <firstname>Winston</firstname>
    </author>

    <author>
      <surname>Van Zyl</surname>

      <firstname>Jason</firstname>
    </author>

    <author>
      <surname>O'Brien</surname>

      <firstname>Tim</firstname>
    </author>

    <editor>
      <othername>Tim O'Brien</othername>
    </editor>

    <copyright>
      <year>${copyright.year}</year>

      <holder>Oracle, Inc.</holder>
    </copyright>

    <date>${release.date}</date>

    <publisher>
      <publishername>Sonatype, Inc.</publishername>

      <address><street>12501 Prosperity Drive, Suite 350</street><city>Silver Spring</city><state>MD</state><postcode>20904</postcode></address>
    </publisher>

    <abstract>
      <para>This is the abstract of the Hudson book, it is such an amazingly
      awesome book, it will redefine the way you think about logic.</para>
    </abstract>

    <subjectset>
      <subject>
        <subjectterm>COM018000</subjectterm>
      </subject>
    </subjectset>
  </bookinfo>

  <xi:include href="copyright.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />

  <xi:include href="foreword.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />

  <xi:include href="chapter-introduction.xml"
              xmlns:xi="http://www.w3.org/2001/XInclude" />

  <xi:include href="chapter-ci.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />

  <xi:include href="chapter-installation.xml"
              xmlns:xi="http://www.w3.org/2001/XInclude" />

  <chapter>
    <title>Configuring Hudson</title>

    <para>To configure Hudson, click on the Manage Hudson link in the
    left-hand navigation menu. Clicking Manage Hudson will display the screen
    shown in <xref linkend="fig-using-manage-matrix" />. This section will
    focus on two links on this page, Configure System and Manage
    Plugins.</para>

    <figure id="fig-using-manage-matrix">
      <title>Managing Hudson Users</title>

      <mediaobject>
        <imageobject role="web">
          <imagedata contentdepth="100%"
                     fileref="figs/web/ci-using-manage-matrix.png"
                     scalefit="1" />
        </imageobject>

        <imageobject role="print">
          <imagedata align="center"
                     fileref="figs/print/ci-using-manage-matrix.pdf"
                     scalefit="0" width="100%" />
        </imageobject>
      </mediaobject>
    </figure>

    <section>
      <title>Global Hudson Configuration</title>

      <para>When you are configuring the Hudson system, click on Configure
      System in the screen shown in <xref
      linkend="fig-using-manage-matrix" />. The first configuration section
      contains options that allow you to configure global Hudson configuration
      attributes. This section is shown in <xref
      linkend="fig-using-global-config" />.</para>

      <figure id="fig-using-global-config">
        <title>Configuring Global Hudson Configuration</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-global-config.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-global-config.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <variablelist>
        <varlistentry>
          <term>Home Directory</term>

          <listitem>
            <para>This is not a configurable parameter it is something that is
            set by the server on startup.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>System Message</term>

          <listitem>
            <para>This is just a global system message that is displayed by
            Hudson.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term># of Executors</term>

          <listitem>
            <para>This parameter controls the number of executors that can
            execute concurrent Hudson builds.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Labels</term>

          <listitem>
            <para>Specific instances of Hudson can be labeled, this feature
            make sense only in the context of a multiple instance grid
            installation of Hudson.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>Email Notification Configuration</title>

      <para>Email notification is a core feature of a continuous integration
      server, and you can configure the way in which Hudson will connect to an
      SMTP server in the Email Notification section of the server
      configuration screen. In this form you can configure an SMTP server, a
      default user e-mail suffix which is appended to build usernames. You can
      set the administrative email address, and the URL to be used in emails
      which link back to the Hudson UI.</para>

      <figure id="fig-using-email-notify">
        <title>Configuring Email Notification</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-email-notify.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-email-notify.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>In addition to basic SMTP configuration parameters, it is also
      possible to configure Hudson to use SMTP auth to send email through
      local services which require secure credentials for sending email or
      public services such as Gmail. To configure these parameters, populate
      the User Name, Password, SSL, SMTP Port parameters. Once you have
      completed the SMTP configuration, click on "Test configuration" to send
      a test email to the administrator email address.</para>
    </section>

    <section>
      <title>Configuring SCM Polling Concurrency</title>

      <para>This is a simple, global parameter to Hudson which controls the
      number of concurrent threads to be used when polling an SCM system. Most
      CI systems discover code changes in an SCM by continuously polling
      source control. If you have enough project configured, this polling can
      grow to become a significant factor in SCM performance. If you are
      suffering performance issues because you have configured hundreds of
      projects to poll SCM, you can use this one property to define
      concurrency limits on Hudson's ability to concurrently poll an
      SCM.</para>

      <figure id="fig-using-scm-poll">
        <title>Configuring SCM Polling Concurrency</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-scm-poll.png" scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-scm-poll.pdf" scalefit="0"
                       width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Configuring the Shell Executable</title>

      <para>Hudson allows for the ability to configure Shell builds. If you
      have a build which requires the execution of bash script or a csh
      script, you can configure which interpreter is used to execute shell
      scripts in this configuration variable.</para>

      <figure id="fig-using-shell-execute">
        <title>Configuring Shell Executable</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-shell-execute.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-shell-execute.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Configuring Maven Installations</title>

      <para>Hudson is designed with a special level of support for Maven
      builds. To use Maven, you must figure configure a Hudson Maven
      installation. To do this, go to the Maven section of the server
      configuration. You can configure one or more installations of Maven, to
      do so, click on the Add Maven button as shown in <xref
      linkend="fig-using-maven-config" />. Then assign your new created Maven
      installation a name which will be displayed in project configuration
      select lists.</para>

      <figure id="fig-using-maven-config">
        <title>Configuring Maven Installations</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-maven-config.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-maven-config.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>To install a version of Maven automatically from the Apache
      Software Foundation, select "Install Automatically" and then click on
      "Add Installer". Clicking on Add Installer will bring up a list of Maven
      versions available to install. We recommend that you run your build
      using the latest Maven 3.0 release. At this point, Maven will not be
      automatically downloaded and installed. Instead, Hudson will initiate a
      Maven installation the first time a build is run which requires
      Maven.</para>
    </section>

    <section>
      <title>Configuring Git Installations</title>

      <para>To configure Git, find the Git section in the Hudson Server
      configuration screen. To configure git, supply a Name for your Git
      installation and then specify an installation directory for git. If Git
      is configured and already available on in your operating system's PATH,
      you can just leave the Installation directory as "git".</para>

      <figure id="fig-using-git-config">
        <title>Configuring Git Installations</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-git-config.png" scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-git-config.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Configuring JDK Installations</title>

      <para>Hudson can support one or more JDK installations. To configure a
      JDK installation, find the JDK section of the server configuration
      screen. To add a new JDK installation click on Add JDK in the screen
      shown in <xref linkend="fig-using-jdk-config" />. Supply a name for a
      JDK installation and then do one of two things: either supply the
      directory for JAVA_HOME or select Install Automatically.</para>

      <figure id="fig-using-jdk-config">
        <title>Configuring JDK Installations</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-jdk-config.png" scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-jdk-config.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Clicking on "Install automatically" will expose a drop down which
      will let you choose a specific version of JDK to download and install
      from Oracle. Once you configure Hudson to download and install the JDK
      automatically, Hudson will wait for the first build which is configured
      to use a named instance of the JDK to initiate the JDK download and
      installation.</para>
    </section>
  </chapter>

  <chapter>
    <title>Hudson Security</title>

    <para></para>

    <section>
      <title>Managing Hudson Users</title>

      <para>Hudson ships without security enabled, to turn on security, you
      must check "Enable Security" on the Server Configuration page and then
      choose from one of the following options for Security Realms:</para>

      <variablelist>
        <varlistentry>
          <term>Unix user/group database</term>

          <listitem>
            <para>If you select this option, Hudson will consult the Unix
            user/group database on the machine it is running on.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Delegate to Servlet Container</term>

          <listitem>
            <para>Selecting this option will allow you to use a custom web
            application to perform authentication.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>LDAP</term>

          <listitem>
            <para>If you have an LDAP server, Hudson can be configured to use
            this server to authenticate users.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Internal user database</term>

          <listitem>
            <para>Selecting Internal user database gives you the ability to
            define users directly in the Hudson user interface.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>In the Access Control settings you can also select from different
      project authorization strategies:</para>

      <variablelist>
        <varlistentry>
          <term>Project-based Authorization Strategy</term>

          <listitem>
            <para>Selecting authorization strategy, you can</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <figure id="fig-using-enable-security">
        <title>Enabling Hudson Security</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-enable-security.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-enable-security.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </chapter>

  <chapter>
    <title>Managing Hudson Plugins</title>

    <para>Hudson plugins can be managed by selecting the "Manage Plugins" link
    shown in <xref linkend="fig-using-matrix-history" />.</para>

    <section>
      <title>Advanced Plugin Management Options</title>

      <para>Hudson retrieves a list of plugins and downloads plugins over the
      public internet. If your server is behind a proxy, you will need to
      configure proxy settings by selecting the Advanced Tab in the plugin
      management screen and populating the options for Server, Port, Username,
      and Password.</para>

      <figure id="fig-using-advanced-plugin">
        <title>Advanced Plugin Management Options</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-advanced-plugin.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-advanced-plugin.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>In addition to Proxy configuration, the Advanced tab also provides
      you with a way to upload Hudson plugins as .hpi files. Hudson is
      compatible with most of the freely available Hudson plugins. These
      plugins are often distributed as .hpi file, and if you need to install
      one on your Hudson instance, just upload it using this form.</para>
    </section>

    <section>
      <title>Available Plugin Updates</title>

      <para>Hudson checks with an available list of Hudson plugins and will
      notify you if an update becomes available. To check for available
      updates, click on the Updates tab in the Manage Plugins screen. Plugin
      eligible for an update will be displayed next to the available update
      version and the version which is currently installed.</para>

      <figure id="fig-using-updates-plugin">
        <title>Available Plugin Updates</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-updates-plugin.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-updates-plugin.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Available Plugins</title>

      <para>Hudson is compatible with most of the freely available Hudson
      plugins, this list of Available plugins includes hundreds of useful
      utilities which can extend the core feature set of Hudson.</para>

      <figure id="fig-using-avail-plugin">
        <title>Available Plugins</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-avail-plugin.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-avail-plugin.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Listing Installed Plugins</title>

      <para>To get a list of installed plugins, click in the Installed Tab on
      the Manage Plugins screen. This will list all of the Hudson plugins
      current installed on your instance of Hudson.</para>

      <figure id="fig-using-installed-plugin">
        <title>Installed Plugins</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-installed-plugin.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-installed-plugin.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </chapter>

  <chapter>
    <title>Creating Hudson Builds</title>

    <para></para>

    <section>
      <title>Configuring Free-style Hudson Projects</title>

      <para> Hudson builds are configured using the free-style project option
      shown in <xref linkend="fig-using-new-project" />. To configure a
      project, navigate to a particular Hudson Project's Summary page by click
      on the name of the project on the main Hudson page. Once you are on a
      Hudson Project's Summary page, click on "Configure" to load the Project
      Configuration screen. The following sections guide you through the
      available options in the Project Configuration screen.</para>

      <section>
        <title>Configuring General Project Settings</title>

        <para>The first section on the Project Screen is the general project
        information which is shown in <xref linkend="fig-using-project-info"
        xrefstyle="select:label" />.</para>

        <figure id="fig-using-project-info">
          <title>Configuring Project Information</title>

          <mediaobject>
            <imageobject role="web">
              <imagedata contentdepth="100%"
                         fileref="figs/web/ci-using-proj-info.png"
                         scalefit="1" />
            </imageobject>

            <imageobject role="print">
              <imagedata align="center"
                         fileref="figs/print/ci-using-proj-info.pdf"
                         scalefit="0" width="100%" />
            </imageobject>
          </mediaobject>
        </figure>

        <para>The section shown in the previous figure contains the following
        fields:</para>

        <variablelist>
          <varlistentry>
            <term>Project Name</term>

            <listitem>
              <para>The project name is easy to explain, this is the name of
              your project. Consider this to be the "machine name" this is the
              identifier that Hudson uses to keep track of a Hudson build. We
              recommend that your project names consist of simple alphanumeric
              characters and dashes. While Hudson will save a Project name
              contains spaces, the file path of the workspace will also
              contain spaces. The presences of spaces in a project name can
              cause unforeseen issues with builds and may results in build
              failure.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Description</term>

            <listitem>
              <para>The description should contain a paragraph that will
              inform Hudson uses about the nature of a give Hudson
              project.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Discard Old Builds</term>

            <listitem>
              <para>If Discard Old Builds is not checked, Hudson will archive
              the results of all the builds it performs. If Discard Old Builds
              is checked, the project configuration screen will display some
              addition input fields that allow you to specify the number of
              builds to retain or the length of time to keep completed
              builds.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>This Build is Parameterized</term>

            <listitem>
              <para>TBD</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Disable Build</term>

            <listitem>
              <para>If Disable Build is selected, no new builds will be
              executed until the project is re-enabled. This means that any
              builds that might have been triggered by SCM activity or by a
              periodic schedule will not be executed. This feature can often
              be very useful if you need to fix an issue with a build and you
              want to temporarily take a particular Hudson job offline without
              affecting other jobs.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Execute concurrent builds if necessary (beta)</term>

            <listitem>
              <para>If this checkbox is selected, Hudson will be able to
              execute more than once build for this project at the same time.
              This can be useful if your project is parameterizes, or if you
              have a longer build which may need to run multiple concurrent
              builds in response to independent changes to SCM.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>JDK</term>

            <listitem>
              <para>This dropdown provides a space to select the appropriate
              Java Development Kit (JDK) for a particular project.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Restrict where this project can be run</term>

            <listitem>
              <para>If restrict where this project can be run is checked,
              Hudson will display options that will allow you to specify the
              nodes on which a project build can be executed.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <warning>
          <para>If you are creating a continuous integration build that will
          run frequently, don't forget to check "Discard Old Builds" and
          configure Hudson to free up drive space. If your project is active
          enough you can easily fill up even the largest hard drive with a
          build that is run tens or hundreds of times a day.</para>
        </warning>

        <para>The next section of the General Project configuration is the
        Advanced Project Options section shown in <xref
        linkend="fig-using-adv-opt" xrefstyle="select:label" />.</para>

        <figure id="fig-using-adv-opt">
          <title>Configuring Advanced Project Options</title>

          <mediaobject>
            <imageobject role="web">
              <imagedata contentdepth="100%"
                         fileref="figs/web/ci-using-adv-opt.png" scalefit="1" />
            </imageobject>

            <imageobject role="print">
              <imagedata align="center"
                         fileref="figs/print/ci-using-adv-opt.pdf"
                         scalefit="0" width="100%" />
            </imageobject>
          </mediaobject>
        </figure>

        <para>The section shown in <xref linkend="fig-using-adv-opt"
        xrefstyle="select:label" /> contains the following fields:</para>

        <variablelist>
          <varlistentry>
            <term>Quiet period</term>

            <listitem>
              <para>You should specify a quiet period if you would like your
              Hudson project to wait a specified number of seconds before a
              triggered build is started. If your Hudson project is constantly
              "flapping" (switching between failure and success frequently),
              you may want to set the Quiet period to encourage more build
              stability.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Retry Count</term>

            <listitem>
              <para>Hudson builds can be trigger by SCM activity. To check for
              SCM activity, Hudson is configured to poll an SCM system on a
              periodic schedule. It Retry Count is selected, you can specify
              the number of times Hudson will attempt to poll an SCM system if
              it is unavailable.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Block build when upstream project is building</term>

            <listitem>
              <para>Hudson builds can be configured as having upstream
              dependencies. Upstream dependencies are project upon which a
              particular project's build depends. If Block build when upstream
              project is building is selected this project will not start a
              build if an upstream project is in the middle of a build.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Use custom workspace</term>

            <listitem>
              <para>If this selection is checked, you can instruct Hudson to
              use a custom directory for this project's workspace. If this
              option is not checked, Hudson will automatically assign a
              workspace location that is based on the project's name.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>

    <section>
      <title>Configuring Build Triggers</title>

      <para>The next section to configure is Build Triggers. A Hudson job can
      be configured to build in response to build activity on a Hudson
      instance, in accordance with a regular schedule, or as a reaction to
      activity in a SCM system. Build triggers are configured on a Project's
      Configuration screen and the section is shown in <xref
      linkend="fig-using-build-triggers" xrefstyle="select:label" />.</para>

      <figure id="fig-using-build-triggers">
        <title>Configuring Build Triggers</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-build-triggers.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-build-triggers.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>The following types of build triggers can be configured:</para>

      <variablelist>
        <varlistentry>
          <term>Build after other projects are built</term>

          <listitem>
            <para>If this option is selected, Hudson will present you with a
            text field that accepts the names of one or more projects. If this
            field is populated, Hudson will trigger this project's build after
            a successful completion of one of the projects listed in this text
            field.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Build periodically</term>

          <listitem>
            <para>If you want to build your project on a regular schedule,
            selecting this option exposes a text area which accepts a standard
            cron expression.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Poll SCM</term>

          <listitem>
            <para>Selecting Poll SCM will cause Hudson to periodically poll
            your source code management system for changes to the codebase.
            Selection this option displays a text area which accepts a
            standard cron expression.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>Configuring Post-build Actions</title>

      <para>Post build actions are an important part of Hudson. One of the
      most valuable post-build action for a continuous integration build is
      the sending of build notification emails. Hudson can be configured to
      send out build failure notices to a developer mailing list. This email,
      in addition to the integration with Eclipse, is one of the primary ways
      in which programmers are notified of build failure. To configure this
      feature, check the checkbox next to E-mail Notification and then specify
      a recipient email address in Recipients. Leave "Send e-mail for every
      unstable build" will instruct Hudson to send multiple email to this
      email address if a build experience consecutive failure events.</para>

      <figure id="fig-using-new-post-build">
        <title>Configuring Project Post-build Options</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-new-post-build.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-new-post-build.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Other important post-build events include the archiving of
      artifacts. If you would like Hudson to keep an archive of specific files
      from each build, preserving version between build. Check the box next to
      "Archive the artifacts" and then specify paths, relative to the
      workspace directory, of artifacts to preserve and associate with
      numbered builds.</para>
    </section>
  </chapter>

  <chapter>
    <title>Working with Maven Builds</title>

    <section>
      <title>Configuring Maven Build Options</title>

      <para>After configuring the general project options, you can configure
      one more build steps. To add a build step, click on the Add build step
      button as shown in <xref linkend="fig-using-new-build-config" />. To
      configure a Maven build, select "Invoke top-level Maven targets".</para>

      <figure id="fig-using-new-build-config">
        <title>Configuring Project Build Options</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-new-build-config.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-new-build-config.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>The basic and advanced options for invoking a top-level Maven
      target are shown in <xref linkend="fig-using-top-level-maven" />.</para>

      <figure id="fig-using-top-level-maven">
        <title>Configuring Top-level Maven Build Options</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-top-level-maven.png"
                       scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-top-level-maven.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <variablelist>
        <varlistentry>
          <term>Maven Version</term>

          <listitem>
            <para>Since your Hudson installation may have one or more Maven
            installations, this dropdown gives you the opportunity to select a
            specific version of Maven.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Goals</term>

          <listitem>
            <para>This field takes one or more Maven goals. In addition to
            Maven goals, you can also specific Maven command-line options in
            this text field.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>POM</term>

          <listitem>
            <para>If your project uses the standard pom.xml, there is no need
            to specify a POM. If your projects uses a POM with an alternative
            name, you should specify that file name here.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Properties</term>

          <listitem>
            <para>You can pass one or more properties to the Maven process.
            This field accepts a list of properties which will affect the
            execution of the Maven build.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>JVM Options</term>

          <listitem>
            <para>If your build requires specific JVM options, they can be set
            in this field. Note that if your build requires MAVEN_OPTS this is
            a separate variable which is described in the section dealing with
            Maven installation configuration.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </chapter>

  <chapter>
    <title>Working with Source Control</title>

    <para>One of the most important parts of the Hudson project configuration
    is the settings that connect your Hudson project to source control. Hudson
    supports the following source control systems:</para>

    <itemizedlist>
      <listitem>
        <para>Subversion</para>
      </listitem>

      <listitem>
        <para>Git</para>
      </listitem>

      <listitem>
        <para>CVS</para>
      </listitem>
    </itemizedlist>

    <para>To configure source code management settings for your project, load
    the project's configuration page and scroll down the Source Code
    Management section. In this section, you must then select one of the radio
    buttons for the source code management system you are using. The following
    sections outline the configuration and options for each support source
    code management system.</para>

    <section>
      <title>Configuring Subversion</title>

      <para>Selecting Subversion under the Source Code Management section will
      display the configuration options shown in <xref
      linkend="fig-using-scm-svn" xrefstyle="select:label" />.</para>

      <figure id="fig-using-scm-svn">
        <title>Configuring Subversion Source Control Information</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-scm-svn.png" scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-scm-svn.pdf" scalefit="0"
                       width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>The section shown in <xref linkend="fig-using-scm-svn"
      xrefstyle="select:label" /> contains the following options:</para>

      <variablelist>
        <varlistentry>
          <term>Modules</term>

          <listitem>
            <para>Hudson can checkout one or more Subversion modules from a
            Subversion repository. To configure a repository location, supply
            a Subversion URL in the Repository URL text field. If you are
            checking out more than one Subversion module, you can also supply
            a Local module directory that Hudson will checkout the specified
            module to. If you leave the Local module directory blank, Hudson
            will check out the specific module to the root of the project's
            workspace.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Use update</term>

          <listitem>
            <para>If Use update is checked, Hudson will execute an "svn
            update" in the workspace at the start of each build. If Use update
            is not selected, Hudson will checkout a clean copy of the
            repository on each build.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Revert</term>

          <listitem>
            <para>If Revert is checked, Hudson will issue an "svn revert"
            prior to calling "svn update". This option can be useful if you
            need to be certain that there are no artifacts left over from the
            previous build.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Repository Browser</term>

          <listitem>
            <para>Hudson supplies valuable information about a build and about
            the SCM activity and changes that contribute to a specific build.
            When Hudson displays information about a Subversion commit or a
            file that has been modified, it can be configured to link to a
            Repository browser which provides a rich web view of a source code
            management tool. Hudson supports the following repository
            browsers: ViewSVN, WebSVN, FishEye, CollabNet, Sventon, and
            Trac.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Excluded Regions, Included Regions</term>

          <listitem>
            <para>These fields provide the Hudson project administrator with
            the option to either specifically include or exclude files and
            directories from the SCM Build trigger. If Included Regions is
            set, Hudson will only trigger a build if a matching file has been
            altered. If Excluded Regions is set, Hudson will not trigger a
            build if a file matching an excluded pattern is matched. This
            option can be useful if are only interested in a subset of files
            and directories contained in a Subversion module.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Excluded Users</term>

          <listitem>
            <para>If this field is populated and Hudson is configured to Poll
            SCM as a build trigger. Hudson will not trigger builds for commits
            from the specified users.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Excluded Commit Messages</term>

          <listitem>
            <para>This field contains a regular expression. If an SCM commit
            message matches this regular expression, Hudson will not trigger a
            project build from an SCM commit.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Exclusion revprop name</term>

          <listitem>
            <para>A Subversion revision can be associated with a property. If
            Hudson encounters a revision with the specified property, it will
            not trigger a build from an SCM commit.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>Configuring Git</title>

      <para>Selecting Git under the Source Code Management section will
      display the configuration options shown in <xref
      linkend="fig-using-scm-git" xrefstyle="select:label" /> and <xref
      linkend="fig-using-scm-git2" />.</para>

      <figure id="fig-using-scm-git">
        <title>Configuring Git Source Control Information</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-scm-git.png" scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-scm-git.pdf" scalefit="0"
                       width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>The section shown in <xref linkend="fig-using-scm-git"
      xrefstyle="select:label" /> contains the following options:</para>

      <variablelist>
        <varlistentry>
          <term></term>

          <listitem>
            <para></para>
          </listitem>
        </varlistentry>
      </variablelist>

      <figure id="fig-using-scm-git2">
        <title>Configuring Additional Git Source Control Information</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-scm-git2.png" scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-scm-git2.pdf" scalefit="0"
                       width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>The section shown in <xref linkend="fig-using-scm-git2" />
      contains the following options:</para>

      <variablelist>
        <varlistentry>
          <term>Local subdirectory for repo (optional)</term>

          <listitem>
            <para>You can specify the name of the subdirectory to checkout a
            git project to. If you omit this subdirectory, the git repository
            will be checked out into the workspace directory.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Merge options</term>

          <listitem>
            <para>Your project can be configured to merge git</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Clean after checkout</term>

          <listitem>
            <para></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Use commit author in changelog</term>

          <listitem>
            <para></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Wipe out workspace</term>

          <listitem>
            <para></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Choosing strategy</term>

          <listitem>
            <para></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Git executable</term>

          <listitem>
            <para></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>Configuring CVS</title>

      <para>Selecting CVS under the Source Code Management section will
      display the configuration options shown in <xref
      linkend="fig-using-scm-cvs" xrefstyle="select:label" />.</para>

      <figure id="fig-using-scm-cvs">
        <title>Configuring CVS Source Control Information</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata contentdepth="100%"
                       fileref="figs/web/ci-using-scm-cvs.png" scalefit="1" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/ci-using-scm-cvs.pdf" scalefit="0"
                       width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>The section show in <xref linkend="fig-using-scm-cvs"
      xrefstyle="select:label" /> contains the following options:</para>

      <variablelist>
        <varlistentry>
          <term>CVSROOT</term>

          <listitem>
            <para>This is the CVSROOT parameter for your source. You would
            enter in the same information here that you would use if you were
            checking out source code use the CVS client.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Module(s), Branch</term>

          <listitem>
            <para>Here you can specify specific modules and specific branches
            to be checked out by Hudson.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>CVS_RSH</term>

          <listitem>
            <para>If you are using CVS over SSH, you can specific options and
            parameters in this variable.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Use update</term>

          <listitem>
            <para>Hudson can be configured to do a full checkout on each build
            or to use cvs update. Select this option will tell Hudson to use
            update instead of performing a clean checkout.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Repository browser</term>

          <listitem>
            <para>Hudson supports a number of external repository browsers,
            here you can select to tool you can Hudson to link to.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Excluded Regions</term>

          <listitem>
            <para>If the module you are checking out contains some code that
            you need to exclude, you can exclude regions by populating these
            fields.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </chapter>

  <xi:include href="appendix-license.xml"
              xmlns:xi="http://www.w3.org/2001/XInclude" />

  <xi:include href="appendix-changes.xml"
              xmlns:xi="http://www.w3.org/2001/XInclude" />

  <index></index>
</book>
