<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.discursive.com/docbook/xml/4.5/docbookx.dtd">
<chapter id="chapter-security">
  <title>Securing Hudson</title>

  <para>As an important part for a software development infrastructure Hudson
  is often installed on local networks. No further security requirements 
    might be needed, when all users on the network are trusted. However with 
    distributed teams, cooperation between companies, 
    external contractors or just open source projects publicly available 
    there are plenty of use cases that require Hudson to be secured. </para>


  <section>
    <title>Security Settings Overview</title>
    <para>Out of the box Hudson has no security enabled, but it can easily be
      turned on by checking
      <option>Enable security</option>
      in the global configuration of Hudson as displayed in <xref
        linkend="fig-global-hudson-configuration"/> and you will be able to
      set up your desired security settings with the options visible in
      <xref linkend="fig-security-overview"/> and documented in this chapter.
    </para>
    <figure id="fig-security-overview">
      <title>Overview of the available security settings</title>
      <mediaobject>
        <imageobject role="web">
          <imagedata contentdepth="100%"
                     fileref="figs/web/security-overview.png" scalefit="1"/>
        </imageobject>
        <imageobject role="print">
          <imagedata align="center" fileref="figs/print/security-overview.pdf"
                     scalefit="0" width="100%"/>
        </imageobject>
      </mediaobject>
    </figure>

  </section>

  <section>
    <title>Miscellaneous Security Related Settings</title>

    <variablelist>
      <varlistentry>
        <term>TCP port for JNLP slave agents</term>
        <listitem>
          <para>The port configuration should be set to
            <option>Disable</option> for Hudson deployments without any slave
            nodes. With slave nodes you can set the port to the default
            <option>Random</option> port. Hudson will randomly choose a port
            avoid port collisions with other services. When running the
            Hudson cluster within a firewall secured environment between the
            nodes, you can choose a fixed port and then ensure that the port
            is open on the respective servers.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Markup Formatter</term>
        <listitem>
          <para>Raw HTML</para> is the default setting that causes Hudson to
          render any input data from text fields as HTML in the user
          interface. This allows for added links and more,
          but also has the potential for cross site scripting XSS attacks.
          <!-- TODO there are not plugins or anything that add a different
          formatter!?, asked on the mailing list -->
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section>
    <title>Access Control</title>

    <para>With security enabled, Hudson supports the following security
      realms out of the box. Further options are available as plugins. </para>

    <itemizedlist>
      <listitem>
        <para>Delegate to servlet container</para>
      </listitem>
      <listitem>
        <para>Unix user/group database</para>
      </listitem>
      <listitem>
        <para>Hudson's own user database</para>
      </listitem>
      <listitem>
        <para>LDAP (Lightweight Directory Access Protocol</para>
      </listitem>
    </itemizedlist>

    <para>Authorization schemes available are</para>
    <itemizedlist>
      <listitem>
        <para>Logged-in users can do anything</para>
      </listitem>
      <listitem>
        <para>Matrix-based security</para>
      </listitem>
      <listitem>
        <para>Project-based Matrix Authorizations Strategy</para>
      </listitem>
      <listitem>
        <para>Legacy mode</para>
      </listitem>
      <listitem>
        <para>Anyone can do anything</para>
      </listitem>
    </itemizedlist>
    <para>which can be seen in <xref linkend="fig-security-overview"/> and
      are documented in detail below.</para>

    <section>
      <title>Configuring Security Realms</title>
      <para>The configuration of the security realm allows you to define
        where user names and passwords are stored and administrated.
        Depending on your deployment it can be useful to tie into already
        existing systems or run a separate realm for Hudson.
      </para>

      <section>
        <title>Delegating to a Servlet Container</title>
        <!--We need a walk-through for how this works.  We also need to
        motivation and explanation.   What protocol is used?  How does this work?
        SEE HBOOK-47-->
        <para>By default running from the war directly Hudson is running in the
          winstone servlet container and there will be no security provided by
          it. However for production usage the preferred deployment method is to
          have Hudson running within a servlet container like Tomcat or Jetty or
          an application server like Glassfish or JBoss AS as documented in
          detail in
          <xref linkend="chapter-install"/>.
        </para>
        <para>Depending on the servlet container you will have access to
          management consoles that allow you to maintain and administrate users
          and groups, which Hudson can then use for authorization.
        </para>
        <para>This feature can be especially useful if other application are
          already using the servlet container authorization and you want to
          achieve a single-sign on for all applications running on this
          server or cluster of servers or you simply prefer to manage your
          users from the application server user interface.
        </para>
        <para>When using this security realm, you will need to use matrix based security
          as documented in <xref linkend="section-security-authorization-matrix"/>
          or  project-based matrix authorization strategy as documented in
          <xref linkend="section-security-authorization-project"/> and set up the user/group
          you want to allow in Hudson in the matrix with the desired access rights.</para>
      </section>

      <section>
        <title>Relying on Unix Users and Groups</title>
        <para>If you select this option, Hudson will consult the Unix user/group
          database on the machine it is running on. To do so it will use the
          Pluggable Authentication Modules (PAM)
          <ulink
            url="http://en.wikipedia.org/wiki/Pluggable_Authentication_Modules"/>
          library. The user running Hudson has to be able to access PAM and be a
          member of the
          <code>shadow</code>
          group. As visible in
          <xref linkend="fig-security-unix"/>
          the setup allows for the definition of a service name and test via
          provided button.
        </para>
        <figure id="fig-security-unix">
          <title>Overview of the available security settings</title>
          <mediaobject>
            <imageobject role="web">
              <imagedata contentdepth="100%"
                         fileref="figs/web/security-unix.png" scalefit="1"/>
            </imageobject>
            <imageobject role="print">
              <imagedata align="center" fileref="figs/print/security-unix.pdf"
                         scalefit="0" width="100%"/>
            </imageobject>
          </mediaobject>
        </figure>

        <tip>
          If you get a stack trace about not being able to find the file
          libpam.so it might work to create the correct symlink like this
          <screen>
            <command>
sudo ln -s /lib/x86_64-linux-gnu/libpam.so.0 /lib/x86_64-linux-gnu/libpam.so
            </command>
          </screen>
        </tip>

        <para>Commonly the users and groups are stored in
          <code>/etc/passwd</code>
          and<code>/etc/group</code>, but depending on the Unix/Linux version
          and the security setup the setup might vary a lot. With this setup
          user and group administration is entirely separate from your Hudson
          install. Use the your preferred administration tool on the command
          line or a graphical user interface.
        </para>

        <para>A consequence of using this security realm is that the Hudson
          instance and access details are tied to the specific server Hudson is
          running on. This means that the user and group setup as to be backed
          up in addition to Hudson data itself and it can not be easily migrated
          unless some sort of single sign on is used across all servers. However
          on the other hand if this sort of infrastructure already exists users
          can just reuse their current login details and have should have access
          to change password and other facilities.
        </para>
      </section>

      <section>
        <title>Using the Hudson Internal User Database</title>
        <para>A convenient method to control access to Hudson without
          external dependencies is to use the internal user database of
          Hudson itself. To activate this feature select
          <option>Hudson's own user database</option> as displayed in
          <xref linkend="fig-security-hudson-db"/></para>
        <figure id="fig-security-hudson-db">
          <title>Overview of the available security settings</title>
          <mediaobject>
            <imageobject role="web">
              <imagedata contentdepth="100%"
                         fileref="figs/web/security-hudson-db.png" scalefit="1"/>
            </imageobject>
            <imageobject role="print">
              <imagedata align="center" fileref="figs/print/security-hudson-db.pdf"
                         scalefit="0" width="100%"/>
            </imageobject>
          </mediaobject>
        </figure>
        <para>The option <option>Allow user to sign up</option> activates the
          <option>Sign Up</option> screen as displayed in
          <xref linkend="fig-security-signup"/>, which also displays a
          captcha that is displayed when the option <option>Enable captcha on
            sign up</option> is activated.
        </para>

        <figure id="fig-security-signup">
          <title>Sign up screen for new users</title>
          <mediaobject>
            <imageobject role="web">
              <imagedata contentdepth="100%"
                         fileref="figs/web/security-signup.png" scalefit="1"/>
            </imageobject>
            <imageobject role="print">
              <imagedata align="center" fileref="figs/print/security-signup.pdf"
                         scalefit="0" width="100%"/>
            </imageobject>
          </mediaobject>
        </figure>
        <para>By providing all details in the sign up form a user can create an
          account to access Hudson. Once a user is signed up and logged in he
          can use then click on his user name in the top left corner and then on
          the
          <option>Configure</option>
          option in the left hand menu to access the user configuration screen,
          which allows password resets among other tasks.
        </para>
        <figure id="fig-security-user-configure">
          <title>User configuration</title>
          <mediaobject>
            <imageobject role="web">
              <imagedata contentdepth="100%"
                         fileref="figs/web/security-user-configure.png" scalefit="1"/>
            </imageobject>
            <imageobject role="print">
              <imagedata align="center" fileref="figs/print/security-user-configure.pdf"
                         scalefit="0" width="100%"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>

      <section>
        <title>Light-weight Directory Authentication Protocol (LDAP)</title>
        <para>If you have an LDAP server, Hudson can be configured to use
        this server to authenticate users. The administration interface in
            <xref linkend="fig-security-ldap"/> allows you to provide all the necessary details
        for Hudson to connect to your LDAP server.</para>
        <figure id="fig-security-ldap">
          <title>Overview of the available security settings</title>
          <mediaobject>
            <imageobject role="web">
              <imagedata contentdepth="100%"
                         fileref="figs/web/security-ldap.png" scalefit="1"/>
            </imageobject>
            <imageobject role="print">
              <imagedata align="center" fileref="figs/print/security-ldap.pdf"
                         scalefit="0" width="100%"/>
            </imageobject>
          </mediaobject>
        </figure>
        <variablelist>
            <varlistentry>
                <term>Server</term>
                <listitem>
                    <para></para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>root DN</term>
                <listitem>
                    <para></para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>User search base</term>
                <listitem>
                    <para></para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>User search filter</term>
                <listitem>
                    <para></para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Group search base</term>
                <listitem>
                    <para></para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Manager DN</term>
                <listitem>
                    <para></para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Manager Password</term>
                <listitem>
                    <para></para>
                </listitem>
            </varlistentry>
        </variablelist>

        <!--We need a section to motivate the LDAP realm, talk about when to use it.
        This section also needs to talk about compatibility with
  various LDAP implementations, and it needs to provide a step-by-step walkthrough.
  SEE HBOOK-48-->

          <!-- LDAP
Select LDAP for the Security Realm and click the help icon for each configuration option to see information about the settings.

If login attempts result in "OperationNotSupportedException - Function Not Implemented", "Administrative Limit Exceeded" or similar error, the LDAP query to determine the group membership for the user may be triggering this. First try setting the "Group search base" setting as specific as possible for your LDAP structure, to reduce the scope of the query. If the error persists, you may need to edit the WEB-INF/security/LDAPBindSecurityRealm.groovy file that is included in hudson.war. Change the line with groupSearchFilter = "(| (member={0}) (uniqueMember={0}) (memberUid={1}))"; to query only of the field used in your LDAP for group membership, such as groupSearchFilter = "(member={0})"; (then restart Hudson).

Groups
Prefix LDAP groups with ROLE_ and convert them to uppercase when assigning privileges to LDAP groups. For example, the LDAP group Developers (cn=Developers) would be used as ROLE_DEVELOPERS in Hudson
Group names with non-alpha characters such as hyphen (-), space and comma do not seem to work.
Hudson does not support indirect group memberships, i.e. if a user is a member of a group A which is itself a member of group B, the user would not get the privileges (e.g. "Adminster Hudson") defined for B - only those defined for A.


One has to add groups prefixing with "ROLE_" (without quotes). I'm using OpenLDAP as its backend.-->
        <para></para>
      </section>

    </section>

    <section>

      <title>Configuring an Authorization Strategy</title>
      <para>Once you decided upon the security realm you basically know how
        users and groups will be created and what has to be done for a user
        to be able to log in to Hudson. As a next step you need to decide on
        the authorization strategy, which determines what user can do once
        they are logged in.
      </para>

      <section>
        <title>Logged-in users can do anything</title>
        <para>This authorization strategy grants read access to Hudson anybody,
          but reserves any modifications for users with a valid account. Once
          the user is logged-in however they have full access rights to
          everything including project deletion and other critical
          functionality. You therefore should be certain to have a good backup
          strategy in place for critical data and that your users are capable
          of using Hudson in an administrative function.
        </para>
      </section>

      <section id="section-security-authorization-matrix">
        <title>Matrix-based security</title>
        <para>For more fine grained control over what specific users or
          groups of users can do you can configure Hudson to use
          <option>Matrix-based security</option> as visible in a minimal
          configuration in <xref linkend="fig-security-authorization-matrix"/>.
        </para>
        <figure id="fig-security-authorization-matrix">
          <title>Matrix based security</title>
          <mediaobject>
            <imageobject role="web">
              <imagedata contentdepth="100%"
                         fileref="figs/web/security-authorization-matrix.png" scalefit="1"/>
            </imageobject>
            <imageobject role="print">
              <imagedata align="center"
                         fileref="figs/print/security-authorization-matrix.pdf"
                         scalefit="0" width="100%"/>
            </imageobject>
          </mediaobject>
        </figure>
        <para>Using the input field for <option>User/group to add</option>
          you can create new rows in the security matrix. The matrix provides
          sections to configure access rights for
        </para>
        <itemizedlist>
          <listitem>
            <para>Overall</para>
          </listitem>
          <listitem>
            <para>Slave</para>
          </listitem>
          <listitem>
            <para>Job</para>
          </listitem>
          <listitem>
            <para>Run</para>
          </listitem>
          <listitem>
            <para>View</para>
          </listitem>
          <listitem>
            <para>SCM</para>
          </listitem>
        </itemizedlist>
        <para>A typical minimal configuration as shown would be to grant all
          rights to an administrative user or group and only read access for
          Overall and Jobs to anonymous users.
        </para>
        <para>By adding further groups or individual users you can e.g. grant
          full administrative access rights to other trusted users without
          sharing the main admin account.
        </para>
        <para>A safe administrative use would be to grant full rights to a
          group of admin users without granting any <option>Delete</option>
          rights.
        </para>
      </section>

      <section id="section-security-authorization-project">
        <title>Project-based Matrix Authorization Strategy</title>
        <para>Taking the concept of matrix based authorization as described
          in <xref linkend="section-security-authorization-matrix"/> a
          step further is <option>Project-based Matrix Authorization
            Strategy</option>. The global configuration
          possible as displayed in
          <xref linkend="fig-security-authorization-project"/> works the same
        as matrix-based security.
        </para>
        <figure id="fig-security-authorization-project">
          <title>Project-based Matrix Authorization Strategy</title>
          <mediaobject>
            <imageobject role="web">
              <imagedata contentdepth="100%"
                         fileref="figs/web/security-authorization-project.png" scalefit="1"/>
            </imageobject>
            <imageobject role="print">
              <imagedata align="center" fileref="figs/print/security-authorization-project.pdf"
                         scalefit="0" width="100%"/>
            </imageobject>
          </mediaobject>
        </figure>
        <para>In addition you can enable project-based security in each
          project configuration individually for each project. Enabling the
          option <option>Enable project-based security</option> will display
          a matrix of access rights as visible in
          <xref linkend="fig-security-authorization-project-specific"/>. It
          will allow you to add users and groups just like for the global
          configuration and assign rights as desired.
        </para>
        <figure id="fig-security-authorization-project-specific">
          <title>Project specific authorization</title>
          <mediaobject>
            <imageobject role="web">
              <imagedata contentdepth="100%"
                         fileref="figs/web/security-authorization-project-specific.png"
                         scalefit="1"/>
            </imageobject>
            <imageobject role="print">
              <imagedata align="center"
                         fileref="figs/print/security-authorization-project-specific.pdf"
                         scalefit="0" width="100%"/>
            </imageobject>
          </mediaobject>
        </figure>
        <para>Using groups accessing a group of projects you could e.g.
          enable administrative rights for a limited number of projects to a
          specific user or user group.
        </para>
      </section>

      <section>
        <title>Using the Legacy Authorization Strategy</title>

        <!--SEE HBOOK-52 - Legacy to what?   Explain what this mode means to the user.-->

        <para></para>
      </section>

      <section>
        <title>Anyone can do anything</title>
        <para>Setting your authorization strategy to the option
          <option>Anyone can do anything</option> effectively turns off
          security. In a scenario where everybody able to access Hudson e
          .g. in a trusted intranet this setting is recommended as an
          alternative to completely disabled security. The advantage for the
          users is that while they do not need to login to use Hudson and
          everyone has access it is possible to login and customize Hudson by
          creating custom views and take advantage of other personalization.
        </para>
      </section>

    </section>
  </section>

  <section>
    <title>Hudson Security Best Practices, Tips and Tricks</title>

    <section>
      <title>Common Setup - Internal user database with matrix-based
        authorization</title>
      <para>A common and useful setup is a combination of using Hudson's internal
      user database with matrix-based authorization. It allows for a secure
        setup of a publicly available Hudson instance without the need for
        any further security components beyond Hudson itself and can
        therefore be managed via the Hudson user interface without any
        additional requirements beyond browser access.
      </para>
      <orderedlist>
        <listitem>
          <para>Enable security in the global Hudson configuration</para>
        </listitem>
        <listitem>
          <para>Activate the security realm for Hudson's own user database
            and allow users to sign up</para>
        </listitem>
        <listitem>
          <para>Set the authorization to <option>Anyone can do
            anything</option> and save the configuration</para>
        </listitem>
        <listitem>
          <para>Sign up a new user e.g. with the name <code>admin</code></para>
        </listitem>
        <listitem>
          <para>Login in as the new user</para>
        </listitem>
        <listitem>
          <para>Change the authorization to matrix-based security</para>
        </listitem>
        <listitem>
          <para>Add the new user to the matrix</para>
        </listitem>
        <listitem>
          <para>Grant all right to the new user as he will the be the
            adminstrator user</para>
        </listitem>
        <listitem>
          <para>Save the configuration</para>
        </listitem>
      </orderedlist>

      <para>Following these steps you will have secured Hudson and the new
        user will be the only user with access to Hudson. If you want e.g.
        anonumous users to have read access you could add these rights in the
        matrix.
      </para>
      <para>For further users you can create additional matrix rows and
        distribute rights as desired.</para>
    </section>

    <section>
      <title>Allowing Developers to do Forced Builds with Security On</title>
      <para>is currently documented on the wiki nicely
        <ulink
        url="http://wiki.hudson-ci.org/display/HUDSON/Quick+and+Simple+Security"/>
      </para>
    </section>

    <section>
      <title>Authenticating in a script</title>
      <para>is currently documented on the wiki and should be expanded on here
        <ulink url="http://wiki.hudson-ci.org/display/HUDSON/Authenticating+scripted+clients"/></para>
    </section>

    <section>
      <title>Disabling security when locked out</title>
      <para>When configuring security or when relying on external
        security realms, you can end up in situations where you do not have
        any access to Hudson in the user interface anymore. Reasons could be a
        forgotten admin password, offline LDAP server, broken Unix authorization
        after server upgrade and so on. To be able to fix up your setup you can
        edit the file
        <filename>config.xml</filename>
        in your
        <option>HUDSON_HOME</option>
        and set
        <screen>
          <command>
            <useSecurity>false</useSecurity>
          </command>
        </screen>
        With this setting you will have full access to Hudson and be able to
        troubleshoot your configuration or change to a new security realm
        and/or authorization.
      </para>
    </section>
  </section>
</chapter>
